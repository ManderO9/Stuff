@attribute [Route(ApplicationRoutes.HomePage)]
@namespace Stuff
@using Stuff.Core
@using System.Net;
@inject IAPIManager apiManager

<div>
    <div class="fixed-top">All Products,  suggested,  Search</div>
    @if(mProducts is null)
    {
        <div class="vw-100 vh-100 d-flex justify-content-center align-items-center">loading data...</div>
    }
    else
    {
        foreach(var product in mProducts)
        {
            <!-- The product element -->
            <div class="mx-0 mb-3 mt-0 p-0 row">

                <!-- The image of the product-->
                <div class="m-0 p-0 col-sm-12 col-lg-4 d-inline-block" style="border:1px solid var(--secondary);">
                    <img class="w-100" src="@product.ImageLink" alt="@product.ImageAltText">
                </div>

                <div class="m-0 p-0 col-sm-12 col-lg-8 d-inline-block">

                    <!-- The name and the price of the product -->
                    <div class="p-2">
                        <div class="overflow-hidden text-truncate w-50">@product.Name</div>
                        <div>price: @product.Price @product.GetDisplayPriceUnit() </div>
                    </div>

                    <!-- More details button -->
                    <div class="d-flex flex-row-reverse me-2 mt-2">
                        <a href="@(ApplicationRoutes.RoutePrefix + ApplicationRoutes.ProductDetailsPage + "/" + product.Id)" class="btn"
                   style="color:var(--secondary); background-color:transparent; text-shadow:3px 3px 10px var(--secondary);">more details</a>
                    </div>
                </div>
            </div>
        }
    }
</div>


@*
/// <summary>
/// The home page of the application
///
</summary>*@
@code {
    /// <summary>
    /// The list of products that we display in this page
    /// </summary>
    private List<Product>? mProducts;

    protected override async Task OnInitializedAsync()
    {
        // TODO: add lazy loading

        // Get the list of products from the server
        var response = await apiManager.GetProductsAsync();

        // If there was a response and it was successful
        if(response is not null && response.Successful)

            // Set the list of products
            mProducts = response.Body;

    }

}